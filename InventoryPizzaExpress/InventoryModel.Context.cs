

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace InventoryPizzaExpress
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class InventoryModuleEntities : DbContext
{
    public InventoryModuleEntities()
        : base("name=InventoryModuleEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }

    public virtual DbSet<AspNetRole> AspNetRoles { get; set; }

    public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }

    public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }

    public virtual DbSet<AspNetUser> AspNetUsers { get; set; }

    public virtual DbSet<I_InventoryItemMaster> I_InventoryItemMaster { get; set; }

    public virtual DbSet<I_ItemMater> I_ItemMater { get; set; }

    public virtual DbSet<I_MenuItems> I_MenuItems { get; set; }

    public virtual DbSet<I_UnitMaster> I_UnitMaster { get; set; }

    public virtual DbSet<v_mi_def> v_mi_def { get; set; }

    public virtual DbSet<mi_def> mi_def { get; set; }

    public virtual DbSet<I_StockTaking> I_StockTaking { get; set; }

    public virtual DbSet<I_StockTakingItemCatalog> I_StockTakingItemCatalog { get; set; }

    public virtual DbSet<I_RecievingItemCatalog> I_RecievingItemCatalog { get; set; }

    public virtual DbSet<I_StockInventory> I_StockInventory { get; set; }

    public virtual DbSet<I_StockTranferDetails> I_StockTranferDetails { get; set; }

    public virtual DbSet<I_OrderDetails> I_OrderDetails { get; set; }

    public virtual DbSet<I_OrderItemCatalog> I_OrderItemCatalog { get; set; }

    public virtual DbSet<I_VenderMaster> I_VenderMaster { get; set; }

    public virtual DbSet<I_StockReqDetails> I_StockReqDetails { get; set; }

    public virtual DbSet<I_StockRequestItemCatalog> I_StockRequestItemCatalog { get; set; }

    public virtual DbSet<I_StockTransferItemCatalog> I_StockTransferItemCatalog { get; set; }

    public virtual DbSet<I_Recipe> I_Recipe { get; set; }

    public virtual DbSet<I_RecipeDetails> I_RecipeDetails { get; set; }

    public virtual DbSet<Store_Details> Store_Details { get; set; }

    public virtual DbSet<I_WasteDetails> I_WasteDetails { get; set; }

    public virtual DbSet<I_WasteItemCatalog> I_WasteItemCatalog { get; set; }

    public virtual DbSet<I_VendorItemCatalog> I_VendorItemCatalog { get; set; }


    public virtual int MapAllMenuItems(Nullable<int> targetStore)
    {

        var targetStoreParameter = targetStore.HasValue ?
            new ObjectParameter("TargetStore", targetStore) :
            new ObjectParameter("TargetStore", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MapAllMenuItems", targetStoreParameter);
    }

}

}

